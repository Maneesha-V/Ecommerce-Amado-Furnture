<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Offer</title>
    <!-- Core Style CSS -->
    <link rel="stylesheet" href="/css/core-style.css">
    <link rel="stylesheet" href="/style.css">
    <script>
        function updateApplicableDropdown() {
            const applicableTo = document.getElementById('applicableTo').value;
            const categoryDropdown = document.getElementById('categoryDropdownContainer');
            const productDropdownContainer = document.getElementById('productDropdownContainer');
            console.log("productDropdownContainer", productDropdownContainer);

            const applicableIdInput = document.getElementById('applicableId');
            console.log("applicableIdInput", applicableIdInput);
            // Clear existing selections
            applicableIdInput.innerHTML = '';
            applicableIdInput.value = '';

            if (applicableTo === 'Category') {
                categoryDropdown.style.display = 'block';
                productDropdownContainer.style.display = 'none';
            } else if (applicableTo === 'Product') {
                categoryDropdown.style.display = 'none';
                productDropdownContainer.style.display = 'block';
                populateAllProducts();
            } else {
                categoryDropdown.style.display = 'none';
                productDropdownContainer.style.display = 'none';
            }
        }

        function populateAllProducts() {
            const productDropdown = document.getElementById('applicableId');
            const products = JSON.parse(document.getElementById('productData').value);

            // Clear existing options
            productDropdown.innerHTML = '<option value="">Select a product</option>';

            // Populate the product dropdown with all products
            products.forEach(product => {
                const option = document.createElement('option');
                option.value = product._id; // Use the ObjectId for the value
                option.textContent = product.name; // Display product name
                productDropdown.appendChild(option);
            });
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>

<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <a href="/admin/offers" class="btn btn-secondary mt-5 ml-5">Go Back</a>
            </div>
        </div>
        <h3 class="text-center">Edit Offer</h3>
        <div class="row d-flex justify-content-center">
            <div class="col-6">
                <form action="/admin/edit-offer/<%= offer._id%>" method="POST">

                    <!-- Offer Name -->
                    <div class="form-group">
                        <label for="offerName">Offer Name:</label>
                        <input type="text" class="form-control" id="offerName" name="offerName"
                            value="<%=offer.offerName%>">
                        <span id="offerNameError" class="text-danger"></span>
                    </div>

                    <!-- Discount Percentage -->
                    <div class="form-group">
                        <label for="discountPercentage" class="mt-3">Discount Percentage:</label>
                        <input type="number" class="form-control" id="discountPercentage" name="discountPercentage"
                            min="0" max="100" value="<%=offer.discountPercentage%>">
                        <span id="discountPercentageError" class="text-danger"></span>
                    </div>

                    <!-- Start Date -->
                    <div class="form-group">
                        <label for="startDate" class="mt-3">Start Date:</label>
                        <input type="date" class="form-control" id="startDate" name="startDate"
                            value="<%= new Date(offer.startDate).toISOString().slice(0, 10) %>">
                        <span id="startDateError" class="text-danger"></span>
                    </div>

                    <!-- End Date -->
                    <div class="form-group">
                        <label for="endDate" class="mt-3">End Date:</label>
                        <input type="date" class="form-control" id="endDate" name="endDate"
                            value="<%= new Date(offer.endDate).toISOString().slice(0, 10) %>">
                        <span id="endDateError" class="text-danger"></span>
                    </div>
                    <%console.log("category.ejs",categoryData)%>
                        <%console.log("product.ejs",productData)%>
                            <!-- Applies To -->
                            <div class="form-group">
                                <label for="applicableTo" class="mt-3">Applies To:</label>
                                <select class="form-control" id="applicableTo" name="applicableTo" required
                                    onchange="updateApplicableDropdown()">
                                    <!-- <option value="All">All Products</option> -->
                                    <option value="Product">Specific Product</option>
                                    <option value="Category">Specific Category</option>
                                </select>
                                <span id="applicableToError" class="text-danger"></span>
                            </div>
                            <!-- Category Dropdown -->
                            <div class="form-group" id="categoryDropdownContainer" style="display: none;">
                                <label for="categoryDropdown">Select Category:</label>
                                <select class="form-control" id="categoryDropdown" name="categoryDropdown"
                                    onchange="updateApplicableDropdown()"> <!-- Fixed function call here -->
                                    <option value="">Select Category</option>
                                    <% categoryData.forEach(category=> { %>
                                        <option value="<%= category._id %>">
                                            <%= category.name %>
                                        </option>
                                        <% }) %>
                                </select>
                                <span id="applicableToError" class="text-danger"></span>
                            </div>

                            <!-- Product Dropdown -->
                            <div class="form-group" id="productDropdownContainer" style="display: none;">
                                <label for="applicableId">Select Product:</label>
                                <select class="form-control" id="applicableId" name="applicableId">
                                    <option value="">Select a product</option>
                                    <% productData.forEach(product=> { %>
                                        <option value="<%= product._id %>" data-category-id="<%= product.categoryId %>">
                                            <%= product.name %>
                                        </option>
                                        <% }) %>
                                </select>
                                <span id="applicableToError" class="text-danger"></span>
                            </div>

                            <input type="hidden" id="productData" value='<%= JSON.stringify(productData) %>' />

                            <!-- Submit Button -->
                            <div class="form-group">
                                <button type="submit" class="btn btn-success mt-4">Update Offer</button>
                            </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Validation logic for the form fields
        function validateForm() {
            let isValid = true;

            // Offer Name Validation (Alphabets and Digits only)
            const offerName = document.getElementById('offerName').value;
            const offerNameError = document.getElementById('offerNameError');
            const offerNameRegex = /^[a-zA-Z0-9\s]+$/; // Regex for alphabets and digits only

            if (!offerName.trim()) {
                offerNameError.textContent = "Offer name is required.";
                isValid = false;
            } else if (!offerNameRegex.test(offerName)) {
                offerNameError.textContent = "Offer name can only letters, digits, and spaces.";
                isValid = false;
            } else {
                offerNameError.textContent = "";
            }

            // Discount Percentage Validation
            const discountPercentage = document.getElementById('discountPercentage').value;
            const discountPercentageError = document.getElementById('discountPercentageError');
            if (discountPercentage < 0 || discountPercentage > 100 || isNaN(discountPercentage)) {
                discountPercentageError.textContent = "Discount must be between 0 and 100.";
                isValid = false;
            } else {
                discountPercentageError.textContent = "";
            }

            // Start Date Validation
            const startDate = document.getElementById('startDate').value;
            const startDateError = document.getElementById('startDateError');
            if (!startDate) {
                startDateError.textContent = "Start date is required.";
                isValid = false;
            } else {
                startDateError.textContent = "";
            }

            // End Date Validation
            const endDate = document.getElementById('endDate').value;
            const endDateError = document.getElementById('endDateError');
            if (!endDate) {
                endDateError.textContent = "End date is required.";
                isValid = false;
            } else if (new Date(endDate) < new Date(startDate)) {
                endDateError.textContent = "End date cannot be earlier than start date.";
                isValid = false;
            } else {
                endDateError.textContent = "";
            }

            // Applicable To Validation
            const applicableTo = document.getElementById('applicableTo').value;
            const applicableToError = document.getElementById('applicableToError');
            const applicableId = document.getElementById('applicableId').value;
            const categoryDropdown = document.getElementById('categoryDropdown').value;

            if (applicableTo === 'Product' && !applicableId) {
                applicableToError.textContent = "Please select a product.";
                isValid = false;
            } else if (applicableTo === 'Category' && !categoryDropdown) {
                applicableToError.textContent = "Please select a category.";
                isValid = false;
            } else {
                applicableToError.textContent = "";
            }

            return isValid;
        }

        // Call validateForm on form submit
        document.querySelector('form').addEventListener('submit', function (event) {
            if (!validateForm()) {
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });

        // Trigger validation on change event for real-time feedback
        document.getElementById('offerName').addEventListener('change', validateForm);
        document.getElementById('discountPercentage').addEventListener('change', validateForm);
        document.getElementById('startDate').addEventListener('change', validateForm);
        document.getElementById('endDate').addEventListener('change', validateForm);
        document.getElementById('applicableTo').addEventListener('change', validateForm);
        document.getElementById('applicableId').addEventListener('change', validateForm);
        document.getElementById('categoryDropdown').addEventListener('change', validateForm);

    </script>
</body>

</html>