<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>

<body>
    <div class="container my-5">
        <h3 class="mb-4">Manage Ordered Items for Order ID: <%= order.orderNumber %>
        </h3>
        <div class="d-flex justify-content-between align-items-center mb-4">
            <!-- Go Back Button -->
            <a href="/admin/orders" class="btn btn-secondary">
                &larr; Go Back
            </a>
        </div>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Item ID</th>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Status</th>
                        <th>Return Request</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (order.items.length> 0) { %>
                        <% order.items.forEach(item=> { %>
                            <tr>
                                <td>
                                    <%= item._id%>
                                </td>
                                <td>
                                    <%= item.prodName %>
                                </td>
                                <td>
                                    <%= item.quantity %>
                                </td>
                                <td>â‚¹<%= item.price %>
                                </td>
                                <td>
                                    <!-- <span class="text-success font-weight-light"><%= item.itemStatus %></span><br> -->
                                    <span>Update item status:</span>
                                    <form class="status-form"
                                        action="/admin/items-status/<%= order._id %>/<%= item._id %>/status"
                                        method="POST">
                                        <select name="status" class="form-select" <%=item.itemStatus==='Delivered'
                                            ? 'disabled' : '' %> >
                                            <option value="Pending" <%=item.itemStatus==='Pending' ? 'selected' : '' %>
                                                >Pending</option>
                                            <option value="Processing" <%=item.itemStatus==='Processing' ? 'selected'
                                                : '' %>>Processing</option>
                                            <option value="Shipped" <%=item.itemStatus==='Shipped' ? 'selected' : '' %>
                                                >Shipped</option>
                                            <option value="Delivered" <%=item.itemStatus==='Delivered' ? 'selected' : ''
                                                %>>Delivered</option>
                                            <option value="Canceled" <%=item.itemStatus==='Canceled' ? 'selected' : ''
                                                %>>Canceled</option>
                                            <option value="Returned" <%=item.itemStatus==='Returned' ? 'selected' : ''
                                                %>>Returned</option>
                                        </select>
                                    </form>
                                </td>
                                <td>
                                    <% if (item.itemStatus==='Delivered' || item.itemStatus==='Returned' ) { %>
                                        <% console.log("itemStatus",item.itemStatus)%>
                                            <% console.log("returnStatus",item.returnStatus)%>
                                                <span>Return item status: <%= item.returnStatus%></span>
                                                <form class="return-form"
                                                    action="/admin/items-status/<%= order._id %>/<%= item._id %>/return"
                                                    method="POST">
                                                    <select name="returnAction" class="form-select">
                                                        <option value="Pending">Return request pending</option>
                                                        <option value="Approve">Return request approved</option>
                                                        <option value="Reject">Return request rejected</option>
                                                    </select>
                                                </form>
                                                <% } else { %>
                                                    <span class="text-muted">No Return</span>
                                                    <% } %>
                                </td>
                                <!-- <td>
                                    <% if (item.status !== 'Canceled') { %>
                                        <form action="/admin/orders/<%= order._id %>/items/<%= item._id %>/cancel" method="POST" onsubmit="return confirm('Are you sure you want to cancel this item?');">
                                            <button type="submit" class="btn btn-danger">Cancel</button>
                                        </form>
                                    <% } else { %>
                                        <span class="badge bg-secondary">Item Canceled</span>
                                    <% } %>
                                </td> -->
                            </tr>
                            <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="5" class="text-center">No items found for this order.</td>
                                    </tr>
                                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.status-form').forEach(form => {
                const statusSelect = form.querySelector('select[name="status"]');

                if (statusSelect) {
                    statusSelect.addEventListener('change', function () {
                        const selectedStatus = this.value;

                        Swal.fire({
                            title: 'Are you sure?',
                            text: `You are about to change the status to ${selectedStatus}. Are you sure you want to proceed?`,
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, proceed!',
                            cancelButtonText: 'No, cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Prepare form data for AJAX
                                const formData = new FormData(form);
                                formData.forEach((value, key) => {
                                    console.log(`${key}: ${value}`);
                                });

                                fetch(form.action, {
                                    method: 'POST',
                                    body: formData,
                                    headers: {
                                        'Accept': 'application/json',
                                        //  'X-Requested-With': 'XMLHttpRequest'
                                    }
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            // Display success message in SweetAlert
                                            Swal.fire({
                                                title: 'Success',
                                                text: 'Status updated successfully.',
                                                icon: 'success', // Set to 'success' for success messages
                                                confirmButtonText: 'OK'
                                            }).then(() => {
                                                // Optionally redirect or reload the page
                                                window.location.href = `/admin/items-status/${data.orderId}`;
                                            });
                                        } else {
                                            // Display error message in SweetAlert
                                            Swal.fire({
                                                title: 'Error',
                                                text: data.message || 'An error occurred.',
                                                icon: 'error',
                                                confirmButtonText: 'OK'
                                            });
                                        }
                                    })
                                    .catch(error => {
                                        // Handle server errors
                                        Swal.fire({
                                            title: 'Server Error',
                                            text: 'An unexpected error occurred. Please try again.',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    });


                            }
                        });
                    });
                }
            });
            document.querySelectorAll('.return-form select').forEach(select => {
                select.addEventListener('change', function () {
                    const form = this.closest('.return-form');
                    const selectedAction = this.value;
                    console.log("form", form);
                    console.log("selectedAction", selectedAction);
                    Swal.fire({
                        title: 'Are you sure?',
                        text: `You are about to ${selectedAction} the return request. Do you want to proceed?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, proceed!',
                        cancelButtonText: 'No, cancel'
                    }).then((result) => {
                        console.log("result", result);

                        if (result.isConfirmed) {
                            const formData = new FormData(form);
                            formData.forEach((value, key) => {
                                console.log(`${key}: ${value}`);
                            });

                            fetch(form.action, {
                                method: 'POST',
                                body: formData,
                                headers: {
                                    'Accept': 'application/json',
                                }
                            })
                                .then(response => response.json())
                                .then(data => {
                                    console.log("data", data);

                                    if (data.success) {
                                        Swal.fire({
                                            title: 'Success',
                                            text: 'Return action processed successfully.',
                                            icon: 'success',
                                            confirmButtonText: 'OK'
                                        }).then(() => {
                                            window.location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Error',
                                            text: data.message || 'An error occurred.',
                                            icon: 'error',
                                            confirmButtonText: 'OK'
                                        });
                                    }
                                })
                                .catch(error => {
                                    Swal.fire({
                                        title: 'Server Error',
                                        text: 'An unexpected error occurred. Please try again.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                });
                        }
                    });
                });
            });
        });

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>