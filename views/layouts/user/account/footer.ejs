<!-- ##### Footer Area Start ##### -->
<footer class="footer_area clearfix">
    <div class="container">
        <div class="row align-items-center">
            <!-- Single Widget Area -->
            <div class="col-12 col-lg-4">
                <div class="single_widget_area">
                    <!-- Logo -->
                    <div class="footer-logo mr-50">
                        <a href="index.html"><img src="/img/core-img/logo2.png" alt=""></a>
                    </div>
                    <!-- Copywrite Text -->
                    <p class="copywrite">
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        Copyright &copy;
                        <script>document.write(new Date().getFullYear());</script> All rights reserved | This
                        template
                        is made with <i class="fa fa-heart-o" aria-hidden="true"></i> by <a href="https://colorlib.com"
                            target="_blank">Colorlib</a> & Re-distributed by <a href="https://themewagon.com/"
                            target="_blank">Themewagon</a>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                    </p>
                </div>
            </div>
            <!-- Single Widget Area -->
            <div class="col-12 col-lg-8">
                <div class="single_widget_area">
                    <!-- Footer Menu -->
                    <div class="footer_menu">
                        <nav class="navbar navbar-expand-lg justify-content-end">
                            <button class="navbar-toggler" type="button" data-toggle="collapse"
                                data-target="#footerNavContent" aria-controls="footerNavContent" aria-expanded="false"
                                aria-label="Toggle navigation"><i class="fa fa-bars"></i></button>
                            <div class="collapse navbar-collapse" id="footerNavContent">
                                <ul class="navbar-nav ml-auto">
                                    <li class="nav-item active">
                                        <a class="nav-link" href="index.html">Home</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" href="shop.html">Shop</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" href="product-details.html">Product</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" href="cart.html">Cart</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" href="checkout.html">Checkout</a>
                                    </li>
                                </ul>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- ##### Footer Area End ##### -->

<!-- ##### jQuery (Necessary for All JavaScript Plugins) ##### -->
<script src="js/jquery/jquery-2.2.4.min.js"></script>
<!-- Popper js -->
<script src="js/popper.min.js"></script>
<!-- Bootstrap js -->
<script src="js/bootstrap.min.js"></script>
<!-- Plugins js -->
<script src="js/plugins.js"></script>
<!-- Active js -->
<script src="js/active.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        const navLinks = document.querySelectorAll('.nav-link')
        const contentContainer = document.getElementById('account-content-display');
        const user = <% - JSON.stringify(user) %>


            // Function to update billing address
            function updateBillingAddress(address) {
                const billingAddressDiv = document.getElementById('billing-address');
                if (billingAddressDiv) {
                    billingAddressDiv.innerHTML = `
        <p>
            ${address.name || ''}<br>
            ${address.addressLine1 || ''}<br>
            ${address.addressLine2 || ''}<br>
            ${address.mobile || ''}<br>
            ${address.city || ''}<br>
            ${address.district || ''}<br>
            ${address.state || ''}, ${address.zip || ''}
        </p>
    `;
                }
            }
        if (user && user.defaultAddress) {
            // console.log("default", user.defaultAddress);
            const defaultAddress = user.addresses.find(address => address._id === user.defaultAddress.toString())


            if (defaultAddress) {
                // console.log("defaultadd", defaultAddress);
                updateBillingAddress(defaultAddress)
                // console.log("update", updateBillingAddress(defaultAddress));

                const defaultCheckbox = document.querySelector(`.select-default-address[data-address-index="${user.addresses.findIndex(address => address._id === user.defaultAddress.toString())}"]`)
                if (defaultCheckbox) {
                    defaultCheckbox.checked = true
                }
                // location.reload();
            }
        }
        function loadContent(url, callback) {
            fetch(url)
                .then(response => response.text())
                .then(data => {
                    contentContainer.innerHTML = data
                    if (callback)
                        callback()
                })
                .catch(error => console.error('Error loading content:', error));
        }
        navLinks.forEach(link => {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                const url = this.getAttribute('data-url');
                loadContent(url, () => {
                    navLinks.forEach(link => link.classList.remove('active'))
                    this.classList.add('active')
                })
            })
        })
        document.addEventListener('click', function (event) {
            if (event.target.closest('.edit-link')) {
                event.preventDefault()
                const url = event.target.closest('.edit-link').getAttribute('data-url')
                loadContent(url)
            }

        })
        document.addEventListener('click', function (event) {
            if (event.target.closest('.add-address-link')) {
                event.preventDefault()
                const url = event.target.closest('.add-address-link').getAttribute('data-url')
                loadContent(url)
            }
        })
        document.addEventListener('click', function (event) {
            if (event.target.closest('.edit-address-link')) {
                event.preventDefault()
                const url = event.target.closest('.edit-address-link').getAttribute('data-url')
                loadContent(url)
            }
        })
        document.addEventListener('click', function (event) {
            console.log("event", event);
            if (event.target.closest('.view-order-status-link')) {
                event.preventDefault();
                const url = event.target.closest('.view-order-status-link').getAttribute('data-url')
                loadContent(url)
            }
        })
        document.addEventListener('click', function (event) {
            if (event.target.closest('.back-link')) {
                event.preventDefault()
                const url = event.target.closest('.back-link').getAttribute('data-url')
                loadContent(url)
            }
        })

        document.addEventListener('click', function (event) {
            if (event.target.closest('.delete-address-link')) {
                // event.preventDefault()
                const url = event.target.closest('.delete-address-link').getAttribute('data-url')
                const addressId = event.target.closest('.address-item').dataset.addressId;

                if (confirm('Are you sure you want to delete this address?')) {
                    fetch(`${url}/${addressId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                event.target.closest('.address-item').remove();
                            } else {
                                alert('Failed to delete address.');
                            }
                        }).catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred. Please try again.');
                        });
                }
                // loadContent(url)
            }
            if (event.target.closest('.select-default-address')) {
                const checkbox = event.target
                // console.log("check",checkbox);                
                const addressIndex = checkbox.getAttribute('data-address-index')
                // console.log("index", addressIndex);

                // console.log("useradd0", user[0].addresses);
                // console.log("useradd",user[0].addresses[addressIndex]);
                const selectedAddress = user.addresses[addressIndex]
                // console.log("select", selectedAddress);

                // Update the billing address section
                updateBillingAddress(selectedAddress);
                //uncheck other checkboxes
                const checkboxes = document.querySelectorAll('.select-default-address');
                checkboxes.forEach(cb => {
                    cb.checked = cb === checkbox;
                });
                fetch('/account/set-default-address', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'Application/json'
                    },
                    body: JSON.stringify({ addressId: selectedAddress._id })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (!data.success) {
                            alert('Failed to set default address.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred. Please try again.');
                    });
            }
        })

        const defaultNavLink = document.querySelector('.nav-link.active');
        if (defaultNavLink) {
            defaultNavLink.click();
        }


    })

</script>


</body>

</html>